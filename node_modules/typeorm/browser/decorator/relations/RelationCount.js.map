{"version":3,"sources":["../browser/src/decorator/relations/RelationCount.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,sBAAsB,EAAC,MAAM,aAAa,CAAC;AAInD;;GAEG;AACH,MAAM,wBAA2B,QAAqC,EAAE,KAAc,EAAE,mBAA8E;IAClK,OAAO,UAAU,MAAc,EAAE,YAAoB;QACjD,IAAM,IAAI,GAA8B;YACpC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;YACZ,mBAAmB,EAAE,mBAAmB;SAC3C,CAAC;QACF,sBAAsB,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC,CAAC;AACN,CAAC","file":"RelationCount.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../index\";\nimport {RelationCountMetadataArgs} from \"../../metadata-args/RelationCountMetadataArgs\";\nimport {SelectQueryBuilder} from \"../../query-builder/SelectQueryBuilder\";\n\n/**\n * Holds a number of children in the closure table of the column.\n */\nexport function RelationCount<T>(relation: string|((object: T) => any), alias?: string, queryBuilderFactory?: (qb: SelectQueryBuilder<any>) => SelectQueryBuilder<any>): Function {\n    return function (object: Object, propertyName: string) {\n        const args: RelationCountMetadataArgs = {\n            target: object.constructor,\n            propertyName: propertyName,\n            relation: relation,\n            alias: alias,\n            queryBuilderFactory: queryBuilderFactory\n        };\n        getMetadataArgsStorage().relationCounts.push(args);\n    };\n}\n\n"],"sourceRoot":"../.."}