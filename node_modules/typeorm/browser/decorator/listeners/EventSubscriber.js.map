{"version":3,"sources":["../browser/src/decorator/listeners/EventSubscriber.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,sBAAsB,EAAC,MAAM,aAAa,CAAC;AAGnD;;;GAGG;AACH,MAAM;IACF,OAAO,UAAU,MAAgB;QAC7B,IAAM,IAAI,GAAiC;YACvC,MAAM,EAAE,MAAM;SACjB,CAAC;QACF,sBAAsB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC,CAAC;AACN,CAAC","file":"EventSubscriber.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../index\";\nimport {EntitySubscriberMetadataArgs} from \"../../metadata-args/EntitySubscriberMetadataArgs\";\n\n/**\n * Classes decorated with this decorator will listen to ORM events and their methods will be triggered when event\n * occurs. Those classes must implement EventSubscriberInterface interface.\n */\nexport function EventSubscriber() {\n    return function (target: Function) {\n        const args: EntitySubscriberMetadataArgs = {\n            target: target\n        };\n        getMetadataArgsStorage().entitySubscribers.push(args);\n    };\n}"],"sourceRoot":"../.."}