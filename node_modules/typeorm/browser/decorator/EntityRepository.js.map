{"version":3,"sources":["../browser/src/decorator/EntityRepository.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,sBAAsB,EAAC,MAAM,UAAU,CAAC;AAGhD;;;;GAIG;AACH,MAAM,2BAA2B,MAAiB;IAC9C,OAAO,UAAU,MAAgB;QAC7B,IAAM,IAAI,GAAiC;YACvC,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;SACjB,CAAC;QACF,sBAAsB,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC,CAAC;AACN,CAAC","file":"EntityRepository.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\nimport {EntityRepositoryMetadataArgs} from \"../metadata-args/EntityRepositoryMetadataArgs\";\n\n/**\n * Used to declare a class as a custom repository.\n * Custom repository can either manage some specific entity, either just be generic.\n * Custom repository can extend AbstractRepository or regular Repository or TreeRepository.\n */\nexport function EntityRepository(entity?: Function): Function {\n    return function (target: Function) {\n        const args: EntityRepositoryMetadataArgs = {\n            target: target,\n            entity: entity,\n        };\n        getMetadataArgsStorage().entityRepositories.push(args);\n    };\n}\n"],"sourceRoot":".."}