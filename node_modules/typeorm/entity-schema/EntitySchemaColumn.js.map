{"version":3,"sources":["../../src/entity-schema/EntitySchemaColumn.ts"],"names":[],"mappings":"","file":"EntitySchemaColumn.js","sourcesContent":["import {ColumnType} from \"../driver/types/ColumnTypes\";\n\nexport interface EntitySchemaColumn {\n    \n    /**\n     * Indicates if this column is a primary column.\n     */\n    primary?: boolean;\n\n    /**\n     * Indicates if this column is a created date column.\n     */\n    createDate?: boolean;\n\n    /**\n     * Indicates if this column is an update date column.\n     */\n    updateDate?: boolean;\n\n    /**\n     * Indicates if this column is a version column.\n     */\n    version?: boolean;\n\n    /**\n     * Indicates if this column is a treeChildrenCount column.\n     */\n    treeChildrenCount?: boolean;\n\n    /**\n     * Indicates if this column is a treeLevel column.\n     */\n    treeLevel?: boolean;\n\n    /**\n     * Column type. Must be one of the value from the ColumnTypes class.\n     */\n    type: ColumnType;\n\n    /**\n     * Column name in the database.\n     */\n    name?: string;\n\n    /**\n     * Column type's length. For example type = \"string\" and length = 100 means that ORM will create a column with\n     * type varchar(100).\n     */\n    length?: string | number;\n\n    /**\n     * Specifies if this column will use AUTO_INCREMENT or not (e.g. generated number).\n     */\n    generated?: true | \"increment\" | \"uuid\";\n\n    /**\n     * Specifies if column's value must be unique or not.\n     */\n    unique?: boolean;\n\n    /**\n     * Indicates if column's value can be set to NULL.\n     */\n    nullable?: boolean;\n\n    /**\n     * Extra column definition. Should be used only in emergency situations. Note that if you'll use this property\n     * auto schema generation will not work properly anymore. Avoid using it.\n     */\n    columnDefinition?: string;\n\n    /**\n     * Column comment.\n     */\n    comment?: string;\n\n    /**\n     * Default database value.\n     */\n    default?: string;\n\n    /**\n     * The precision for a decimal (exact numeric) column (applies only for decimal column), which is the maximum\n     * number of digits that are stored for the values.\n     */\n    precision?: number;\n\n    /**\n     * The scale for a decimal (exact numeric) column (applies only for decimal column), which represents the number\n     * of digits to the right of the decimal point and must not be greater than precision.\n     */\n    scale?: number;\n\n    /**\n     * Column collation. Note that not all databases support it.\n     */\n    collation?: string; // todo: looks like this is not used\n\n}"],"sourceRoot":".."}