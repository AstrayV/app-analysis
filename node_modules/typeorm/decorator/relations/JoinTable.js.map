{"version":3,"sources":["../../src/decorator/relations/JoinTable.ts"],"names":[],"mappings":";;AAAA,qCAAmD;AAuBnD;;;GAGG;AACH,mBAA0B,OAA0D;IAChF,OAAO,UAAU,MAAc,EAAE,YAAoB;QACjD,OAAO,GAAG,OAAO,IAAI,EAAsD,CAAC;QAC5E,IAAM,IAAI,GAA0B;YAChC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,WAAW,EAAE,CAAC,OAAO,IAAK,OAA4B,CAAC,UAAU,CAAC,CAAC,CAAC,CAAE,OAA4B,CAAC,UAAW,CAAC,CAAC,CAAC,CAAE,OAA2C,CAAC,WAAW,CAAQ;YAClL,kBAAkB,EAAE,CAAC,OAAO,IAAK,OAA4B,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAE,OAA4B,CAAC,iBAAkB,CAAC,CAAC,CAAC,CAAE,OAA2C,CAAC,kBAAkB,CAAQ;YAC9M,MAAM,EAAE,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;YAC9D,QAAQ,EAAE,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;SACvE,CAAC;QACF,8BAAsB,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC,CAAC;AACN,CAAC;AAdD,8BAcC","file":"JoinTable.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../index\";\nimport {JoinTableOptions} from \"../options/JoinTableOptions\";\nimport {JoinTableMetadataArgs} from \"../../metadata-args/JoinTableMetadataArgs\";\nimport {JoinTableMultipleColumnsOptions} from \"../options/JoinTableMuplipleColumnsOptions\";\n\n/**\n * JoinTable decorator is used in many-to-many relationship to specify owner side of relationship.\n * Its also used to set a custom junction table's name, column names and referenced columns.\n */\nexport function JoinTable(): Function;\n\n/**\n * JoinTable decorator is used in many-to-many relationship to specify owner side of relationship.\n * Its also used to set a custom junction table's name, column names and referenced columns.\n */\nexport function JoinTable(options: JoinTableOptions): Function;\n\n/**\n * JoinTable decorator is used in many-to-many relationship to specify owner side of relationship.\n * Its also used to set a custom junction table's name, column names and referenced columns.\n */\nexport function JoinTable(options: JoinTableMultipleColumnsOptions): Function;\n\n/**\n * JoinTable decorator is used in many-to-many relationship to specify owner side of relationship.\n * Its also used to set a custom junction table's name, column names and referenced columns.\n */\nexport function JoinTable(options?: JoinTableOptions|JoinTableMultipleColumnsOptions): Function {\n    return function (object: Object, propertyName: string) {\n        options = options || {} as JoinTableOptions|JoinTableMultipleColumnsOptions;\n        const args: JoinTableMetadataArgs = {\n            target: object.constructor,\n            propertyName: propertyName,\n            name: options.name,\n            joinColumns: (options && (options as JoinTableOptions).joinColumn ? [(options as JoinTableOptions).joinColumn!] : (options as JoinTableMultipleColumnsOptions).joinColumns) as any,\n            inverseJoinColumns: (options && (options as JoinTableOptions).inverseJoinColumn ? [(options as JoinTableOptions).inverseJoinColumn!] : (options as JoinTableMultipleColumnsOptions).inverseJoinColumns) as any,\n            schema: options && options.schema ? options.schema : undefined,\n            database: options && options.database ? options.database : undefined,\n        };\n        getMetadataArgsStorage().joinTables.push(args);\n    };\n}\n\n"],"sourceRoot":"../.."}