{"version":3,"sources":["../../src/decorator/columns/ObjectIdColumn.ts"],"names":[],"mappings":";;AACA,qCAAmD;AAGnD;;;GAGG;AACH,wBAA+B,OAAuB;IAClD,OAAO,UAAU,MAAc,EAAE,YAAoB;QAEjD,kEAAkE;QAClE,IAAI,CAAC,OAAO;YAAE,OAAO,GAAG,EAAmB,CAAC;QAC5C,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;YAC7B,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;SAC5C,CAAC,CAAC;QAEH,4CAA4C;QAC5C,IAAM,IAAI,GAAuB;YAC7B,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE,OAAO;SACnB,CAAC;QACF,8BAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC,CAAC;AACN,CAAC;AAnBD,wCAmBC","file":"ObjectIdColumn.js","sourcesContent":["import {ColumnOptions} from \"../options/ColumnOptions\";\nimport {getMetadataArgsStorage} from \"../../index\";\nimport {ColumnMetadataArgs} from \"../../metadata-args/ColumnMetadataArgs\";\n\n/**\n * Special type of column that is available only for MongoDB database.\n * Marks your entity's column to be an object id.\n */\nexport function ObjectIdColumn(options?: ColumnOptions): Function {\n    return function (object: Object, propertyName: string) {\n\n        // if column options are not given then create a new empty options\n        if (!options) options = {} as ColumnOptions;\n        options = Object.assign(options, {\n            primary: true,\n            name: options.name ? options.name : \"_id\"\n        });\n\n        // create and register a new column metadata\n        const args: ColumnMetadataArgs = {\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"objectId\",\n            options: options\n        };\n        getMetadataArgsStorage().columns.push(args);\n    };\n}\n"],"sourceRoot":"../.."}