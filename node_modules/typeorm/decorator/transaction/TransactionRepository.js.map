{"version":3,"sources":["../../src/decorator/transaction/TransactionRepository.ts"],"names":[],"mappings":";;AAAA,qCAAmD;AAGnD;;GAEG;AACH,+BAAsC,UAAqB;IACvD,OAAO,UAAC,MAAc,EAAE,UAAkB,EAAE,KAAa;QACrD,IAAI,cAAwB,CAAC;QAC7B,IAAI;YACA,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC,mBAAmB,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;SAC3F;QAAC,OAAO,GAAG,EAAE;YACV,MAAM,IAAI,KAAK,CACX,uCAAoC,UAAU,iCAA2B,MAAM,CAAC,WAAW,CAAC,IAAI,aAAU;gBAC1G,4FAA0F;gBAC1F,0GAAwG,CAC3G,CAAC;SACL;QAED,IAAM,IAAI,GAAsC;YAC5C,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,UAAU,YAAA;YACV,KAAK,OAAA;YACL,cAAc,gBAAA;YACd,UAAU,YAAA;SACb,CAAC;QACF,8BAAsB,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC;AACN,CAAC;AAtBD,sDAsBC","file":"TransactionRepository.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../index\";\nimport {TransactionRepositoryMetadataArgs} from \"../../metadata-args/TransactionRepositoryMetadataArgs\";\n\n/**\n * Injects transaction's repository into the method wrapped with @Transaction decorator.\n */\nexport function TransactionRepository(entityType?: Function): ParameterDecorator {\n    return (object: Object, methodName: string, index: number) => {\n        let repositoryType: Function;\n        try {\n            repositoryType = Reflect.getOwnMetadata(\"design:paramtypes\", object, methodName)[index];\n        } catch (err) {\n            throw new Error(\n                `Cannot get reflected type for a \"${methodName}\" method's parameter of ${object.constructor.name} class. ` +\n                `Make sure you have turned on an \"emitDecoratorMetadata\": true, option in tsconfig.json. ` +\n                `Also make sure you have imported \"reflect-metadata\" on top of the main entry file in your application.`\n            );\n        }\n        \n        const args: TransactionRepositoryMetadataArgs = {\n            target: object.constructor,\n            methodName,\n            index,\n            repositoryType,\n            entityType,\n        };\n        getMetadataArgsStorage().transactionRepositories.push(args);\n    };\n}\n"],"sourceRoot":"../.."}