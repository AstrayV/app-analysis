/**
 * Created by synder on 2016/10/12.
 */


var os = require('os');
var path = require('path');
var exec = require('child_process').exec;

/**
 * @desc parse android apk info
 * */
exports.parse = function (filepath, callback) {

    var aapt = path.join(__dirname, 'bin', 'aapt_' + os.platform());
    if(os.platform()=='linux'){
      //aapt =path.join(__dirname, 'bin', '/linux/aapt/aapt')
      aapt = 'aapt'
    }
    aapt = 'aapt'
  const defaults = {
    encoding: 'utf8',
    timeout: 0,
    maxBuffer: 2000 * 1024,
    killSignal: 'SIGTERM',
    cwd: null,
    env: null
  };
    var command = aapt + " d badging " + filepath;
    exec(command,defaults, function (err, stdout, stderr) {
        if(err){
            return callback(err);
        }

        if(stderr){
            return callback(new Error(stderr));
        }

        var infos = stdout.split('\n');

        var permissions = [];
        var features = [];
        var impliedFeatures = [];
        var supportsscreens = [];
        var nativecodes = '';
        var locales = [];
        var usesgles =''

        var infosTemp = {};

        function addtoarr(arr, str) {
          if(str){
            arr =str.split(' ')
          }
        }

        infos.forEach(function (info) {
            if(info){
                var t = info.split(':');
                if(t.length == 2){
                    var key = t[0].trim();
                    var value = t[1].trim().replace(new RegExp("'", 'g'), "");
                    infosTemp[key] = value;
                    //console.log(key,value)
                    if(key == 'uses-permission'){
                        permissions.push(value);
                    }else if(key == 'uses-feature'){
                        features.push(value);
                    }else if(key == 'uses-implied-feature'){
                        impliedFeatures.push(value);
                    }else if(key == 'supports-screens'){
                      supportsscreens =value.split(' ')
                      //supportsscreens.push(value);
                    }else if(key == 'native-code'){
                      nativecodes =value
                      //nativecodes.push(value)
                    }else if(key == 'locales'){
                      locales =value.split(' ')
                      //locales.push(value)
                    }else if(key == 'uses-gl-es'){
                      usesgles =value
                    }

                }
            }
        });

        var packageInfo = infosTemp['package'].split(' ');
        var packageInfoTemp = {};

        packageInfo.forEach(function (info) {
            if(info){
                var t = info.split('=');
                if(t.length === 2){
                    packageInfoTemp[t[0].trim()] = t[1].trim().replace('\'', '');
                }
            }
        });

        var applicationInfo = infosTemp['application'].split(' ');
        var applicationLabel = null;
        var applicationIcon = null;

        applicationInfo.forEach(function (info) {
            if(info){
                var t = info.split('=');
                if(t.length === 2){
                    if(t[0].trim() == 'label'){
                        applicationLabel = t[1].trim().replace('\'', '');
                    }
                    if(t[0].trim() == 'icon'){
                        applicationIcon = t[1].trim().replace('\'', '');
                    }
                }
            }
        });

        callback(null, {
            packageName: packageInfoTemp['name'],
            packageVersionName: packageInfoTemp['versionName'],
            packageVersionCode: parseInt(packageInfoTemp['versionCode']),
            applicationLabel: applicationLabel,
            applicationIcon: applicationIcon,
            sdkVersion: parseInt(infosTemp['sdkVersion']),
            targetSdkVersion: parseInt(infosTemp['targetSdkVersion']),
            usesPermission: permissions.sort(),
            usesFeature: features.sort(),
            useImpliedFeature: impliedFeatures.sort(),
            nativecode: nativecodes,
            supportsscreens:supportsscreens.sort(),
            locales: locales.sort(),
            usesgles:usesgles
        });
    });
};

